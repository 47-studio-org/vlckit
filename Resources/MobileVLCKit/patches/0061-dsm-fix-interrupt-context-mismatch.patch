From 1d3e984a4ec811de3aaa420199b6a2f05efe3bde Mon Sep 17 00:00:00 2001
From: Thomas Guillem <thomas@gllm.fr>
Date: Wed, 9 Mar 2022 17:04:12 +0100
Subject: [PATCH 61/71] dsm: fix interrupt context mismatch

The dsm interrupt context was also registered when calling the
credential API that can end up in keystore modules that need to register
an interrupt context. To fix this issue, register the interrupt context
only before dsm calls.

(cherry picked from commit 6b4b7225e5ba757ecc4ca38eb6de2e21a43a9c6d)
Signed-off-by: Thomas Guillem <thomas@gllm.fr>
---
 modules/access/dsm/access.c | 17 +++++++++++++----
 1 file changed, 13 insertions(+), 4 deletions(-)

diff --git a/modules/access/dsm/access.c b/modules/access/dsm/access.c
index 4f125feb77..349b423785 100644
--- a/modules/access/dsm/access.c
+++ b/modules/access/dsm/access.c
@@ -215,20 +215,16 @@ static int Open( vlc_object_t *p_this )
 
     get_path( p_access );
 
-    smb_session_interrupt_register( p_sys );
-
     if( login( p_access ) != VLC_SUCCESS )
     {
         msg_Err( p_access, "Unable to open file with path %s (in share %s)",
                  p_sys->psz_path, p_sys->psz_share );
-        smb_session_interrupt_unregister();
         goto error;
     }
 
     /* If there is no shares, browse them */
     if( !p_sys->psz_share )
     {
-        smb_session_interrupt_unregister();
         return BrowserInit( p_access );
     }
 
@@ -237,6 +233,8 @@ static int Open( vlc_object_t *p_this )
     msg_Dbg( p_access, "Path: Share name = %s, path = %s", p_sys->psz_share,
              p_sys->psz_path );
 
+    smb_session_interrupt_register( p_sys );
+
     st = smb_stat_fd( p_sys->p_session, p_sys->i_fd );
     if( smb_stat_get( st, SMB_STAT_ISDIR ) )
     {
@@ -439,6 +437,8 @@ static int login( stream_t *p_access )
     }
     psz_domain = credential.psz_realm ? credential.psz_realm : p_sys->netbios_name;
 
+    smb_session_interrupt_register( p_sys );
+
     /* Now that we have the required data, let's establish a session */
     int status = smb_session_connect( p_sys->p_session, p_sys->netbios_name,
                                       p_sys->addr.s_addr, SMB_TRANSPORT_TCP );
@@ -447,13 +447,19 @@ static int login( stream_t *p_access )
         msg_Err( p_access, "Unable to connect/negotiate SMB session");
         /* FIXME: libdsm wrongly return network error when the server can't
          * handle the SMBv1 protocol */
+        smb_session_interrupt_unregister();
         goto error;
     }
 
     /* Try to authenticate on the remote machine */
     int connect_err = smb_connect( p_access, psz_login, psz_password, psz_domain );
     if( connect_err == ENOENT )
+    {
+        smb_session_interrupt_unregister();
         goto error;
+    }
+
+    smb_session_interrupt_unregister();
 
     if( connect_err == EACCES )
     {
@@ -473,7 +479,10 @@ static int login( stream_t *p_access )
             psz_password = credential.psz_password;
             psz_domain = credential.psz_realm ? credential.psz_realm
                                               : p_sys->netbios_name;
+
+            smb_session_interrupt_register( p_sys );
             connect_err = smb_connect( p_access, psz_login, psz_password, psz_domain );
+            smb_session_interrupt_unregister();
         }
 
         if( connect_err != 0 )
-- 
2.32.0 (Apple Git-132)

