From 8598a52e6ea958cf85ccac80b10df1eff68ebe45 Mon Sep 17 00:00:00 2001
From: Thomas Guillem <thomas@gllm.fr>
Date: Mon, 11 Apr 2022 14:43:32 +0200
Subject: [PATCH 74/76] smb2: call error handling from smb2_generic_cb

Errors can also be reported via generic cbs, that will cause the
vlc_smb2_mainloop to abort. In that case, we should destroy the smb2
context to fix the issue mentioned by 924c951518f02dd05436d46323301702df516f4f
---
 modules/access/smb2.c | 21 +++++++++++----------
 1 file changed, 11 insertions(+), 10 deletions(-)

diff --git a/modules/access/smb2.c b/modules/access/smb2.c
index 3038747773..914b0535ae 100644
--- a/modules/access/smb2.c
+++ b/modules/access/smb2.c
@@ -157,13 +157,17 @@ vlc_smb2_op_reset(struct vlc_smb2_op *op, struct smb2_context **smb2p)
 static void
 smb2_set_error(struct vlc_smb2_op *op, const char *psz_func, int err)
 {
+    assert(err < 0);
+
+    /* Ignore second error, might happen if the error is set from
+     * smb2_check_status() and then manually. */
+    if (op->error_status != 0)
+        return;
+
     if (op->log && err != -EINTR)
         vlc_error(op->log, "%s failed: %d, %s", psz_func, err, smb2_get_error(op->smb2));
 
-    if (err != 0)
-        op->error_status = err;
-    else if (op->error_status == 0) /* don't override if set via smb2_check_status */
-        op->error_status = -EINVAL;
+    op->error_status = err;
 
     smb2_destroy_context(op->smb2);
     *op->smb2p = NULL;
@@ -174,10 +178,7 @@ smb2_check_status(struct vlc_smb2_op *op, const char *psz_func, int status)
 {
     if (status < 0)
     {
-        const char *psz_error = smb2_get_error(op->smb2);
-        if (op->log)
-            msg_Warn(op->log, "%s failed: %d, '%s'", psz_func, status, psz_error);
-        op->error_status = status;
+        smb2_set_error(op, psz_func, status);
         return -1;
     }
     else
@@ -249,7 +250,7 @@ vlc_smb2_mainloop(struct vlc_smb2_op *op)
         else if (ret == 0)
         {
             if (smb2_service_fd(op->smb2, -1, 0) < 0)
-                VLC_SMB2_SET_ERROR(op, "smb2_service", 0);
+                VLC_SMB2_SET_ERROR(op, "smb2_service", -EINVAL);
         }
         else
         {
@@ -257,7 +258,7 @@ vlc_smb2_mainloop(struct vlc_smb2_op *op)
             {
                 if (p_fds[i].revents
                  && smb2_service_fd(op->smb2, p_fds[i].fd, p_fds[i].revents) < 0)
-                    VLC_SMB2_SET_ERROR(op, "smb2_service", 0);
+                    VLC_SMB2_SET_ERROR(op, "smb2_service", -EINVAL);
             }
         }
     }
-- 
2.32.0 (Apple Git-132)

