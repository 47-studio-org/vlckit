From 273bc08d22cc5a2a0f16de68ac71d7328ee6e1d7 Mon Sep 17 00:00:00 2001
From: Thomas Guillem <thomas@gllm.fr>
Date: Tue, 2 Mar 2021 16:20:02 +0100
Subject: [PATCH 41/44] contrib: nfs: update to 4.0.0

Many bug and crash fixes, and add NFSv4 support.
---
 contrib/src/nfs/SHA512SUMS  |  2 +-
 contrib/src/nfs/rules.mak   |  3 +-
 contrib/src/nfs/win32.patch | 65 -------------------------------------
 3 files changed, 2 insertions(+), 68 deletions(-)
 delete mode 100644 contrib/src/nfs/win32.patch

diff --git a/contrib/src/nfs/SHA512SUMS b/contrib/src/nfs/SHA512SUMS
index f17f6dbb1c..649e11e528 100644
--- a/contrib/src/nfs/SHA512SUMS
+++ b/contrib/src/nfs/SHA512SUMS
@@ -1 +1 @@
-e1ef6e341fd56955c3adedf6ba90841a57be9c6a962d61ff18425593bfc2787c34c776fdc8ec711f8bb2da1ec08271fc8778a0499aef01c3a7694c384a4c037b  libnfs-1.11.0.tar.gz
+3d93d83d1909f24de304c0d47fa6240da7ecf43ce2488a242a58ddabe51d774caf813f5a90ae720a8edd251a765b30e88c0e5b6a13ecb254dfecdc98e30737fa  libnfs-4.0.0.tar.gz
diff --git a/contrib/src/nfs/rules.mak b/contrib/src/nfs/rules.mak
index 221c26f84e..b65816c37d 100644
--- a/contrib/src/nfs/rules.mak
+++ b/contrib/src/nfs/rules.mak
@@ -1,5 +1,5 @@
 # NFS
-NFS_VERSION := 1.11.0
+NFS_VERSION := 4.0.0
 NFS_URL := https://github.com/sahlberg/libnfs/archive/libnfs-$(NFS_VERSION).tar.gz
 
 PKGS += nfs
@@ -15,7 +15,6 @@ $(TARBALLS)/libnfs-$(NFS_VERSION).tar.gz:
 nfs: libnfs-$(NFS_VERSION).tar.gz .sum-nfs
 	$(UNPACK)
 	mv libnfs-libnfs-$(NFS_VERSION) libnfs-$(NFS_VERSION)
-	$(APPLY) $(SRC)/nfs/win32.patch
 	$(UPDATE_AUTOCONFIG)
 	$(MOVE)
 
diff --git a/contrib/src/nfs/win32.patch b/contrib/src/nfs/win32.patch
deleted file mode 100644
index eece8daf38..0000000000
--- a/contrib/src/nfs/win32.patch
+++ /dev/null
@@ -1,65 +0,0 @@
-diff -ruN nfs/configure.ac nfs.good/configure.ac
---- nfs/configure.ac	2016-10-09 20:23:11.000000000 +0200
-+++ nfs.good/configure.ac	2017-04-10 11:55:45.979424891 +0200
-@@ -79,7 +79,7 @@
- AC_SUBST(MAYBE_EXAMPLES)
- 
- AC_MSG_CHECKING(whether SO_BINDTODEVICE is available)
--AC_TRY_RUN([
-+AC_TRY_COMPILE([
- /*
-  * Just see if we can compile with SO_BINDTODEVICE
-  */
-@@ -92,7 +92,7 @@
- }
- ], ac_cv_have_so_bindtodevice=yes, ac_cv_have_so_bindtodevice=no,
-    [echo $ac_n "compile with SO_BINDTODEVICE. Assuming OK... $ac_c"
--    ac_cv_have_so_bindtodevice=yes])
-+    ac_cv_have_so_bindtodevice])
- if test "$ac_cv_have_so_bindtodevice" = yes ; then
-   AC_MSG_RESULT(yes)
-   AC_DEFINE(HAVE_SO_BINDTODEVICE, 1, [Whether our sockets support SO_BINDTODEVICE])
-diff -ruN nfs/lib/libnfs.c nfs.good/lib/libnfs.c
---- nfs/lib/libnfs.c	2016-10-09 20:23:11.000000000 +0200
-+++ nfs.good/lib/libnfs.c	2017-04-10 11:46:32.471450692 +0200
-@@ -26,8 +26,10 @@
- #endif
- 
- #ifdef WIN32
-+ #define __STDC_FORMAT_MACROS 1
-+#include <inttypes.h>
- #include "win32_compat.h"
--#define PRIu64 "llu"
-+//#define PRIu64 "llu"
- #else
- #include <inttypes.h>
- #endif
-diff -ruN nfs/win32/win32_compat.h nfs.good/win32/win32_compat.h
---- nfs/win32/win32_compat.h	2016-10-09 20:23:11.000000000 +0200
-+++ nfs.good/win32/win32_compat.h	2017-04-10 11:43:57.415457919 +0200
-@@ -38,6 +38,7 @@
- typedef int gid_t;
- typedef int socklen_t;
- 
-+#ifndef S_IRUSR
- #define S_IRUSR 0000400
- #define S_IWUSR 0000200
- #define S_IXUSR 0000100
-@@ -49,6 +50,7 @@
- #define S_IROTH 0000004
- #define S_IWOTH 0000002
- #define S_IXOTH 0000001
-+#endif
- 
- #define F_GETFL  3
- #define F_SETFL  4
-@@ -106,7 +108,9 @@
- #define poll(x, y, z)        win32_poll(x, y, z)
- #define inet_pton(x,y,z)     win32_inet_pton(x,y,z)
- #define open(x, y, z)        _open(x, y, z)
-+#ifndef lseek
- #define lseek(x, y, z)       _lseek(x, y, z)
-+#endif
- #define read(x, y, z)        _read(x, y, z)
- #define write(x, y, z)       _write(x, y, z)
- int     getpid(void);
-- 
2.24.3 (Apple Git-128)

